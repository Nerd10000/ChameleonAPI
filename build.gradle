plugins {
    id 'java'
    id 'maven-publish'
}

group = 'dragon.me'
version = '1.0-SNAPSHOT'

java {
    withJavadocJar()
    withSourcesJar()
    def javaVersion = JavaVersion.toVersion(21)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { name = "spigotmc-repo"; url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { name = "sonatype"; url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }
    maven { url = uri("https://repo.codemc.io/repository/maven-snapshots/") }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT")
    implementation platform('org.apache.logging.log4j:log4j-bom:2.24.3')
    implementation("org.apache.logging.log4j:log4j-api:3.0.0-beta2")
    implementation("cglib:cglib:3.3.0")
    implementation "net.kyori:adventure-api:4.20.0"
    implementation "net.kyori:adventure-platform-bukkit:4.3.4"
    implementation "net.kyori:adventure-text-serializer-gson:4.20.0"
    implementation "net.kyori:adventure-text-minimessage:4.20.0"
    compileOnly 'me.lucko:spark-api:0.1-SNAPSHOT'
    compileOnly("com.github.retrooper:packetevents-spigot:2.7.0")
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'com.carrotsearch:java-sizeof:0.0.5'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isJava10Compatible()) {
        options.release.set(21)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Nerd10000/ChameleonAPI")
            credentials {
                username = project.findProperty("USERNAME") ?: System.getenv("USERNAME")
                password = project.findProperty("TOKEN") ?: System.getenv("TOKEN")
            }
        }
    }
}
